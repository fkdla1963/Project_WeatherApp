// Generated by view binder compiler. Do not edit!
package com.kr.weathertest.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.kr.weathertest.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button Button1;

  @NonNull
  public final Button Button2;

  @NonNull
  public final TextView address;

  @NonNull
  public final LinearLayout addressContainer;

  @NonNull
  public final LinearLayout detailsContainer;

  @NonNull
  public final LinearLayout imagesContainer;

  @NonNull
  public final RelativeLayout mainContainer;

  @NonNull
  public final LinearLayout overviewContainer;

  @NonNull
  public final TextView status;

  @NonNull
  public final TextView temp;

  @NonNull
  public final TextView tempMax;

  @NonNull
  public final TextView tempMin;

  @NonNull
  public final TextView updatedAt;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView, @NonNull Button Button1,
      @NonNull Button Button2, @NonNull TextView address, @NonNull LinearLayout addressContainer,
      @NonNull LinearLayout detailsContainer, @NonNull LinearLayout imagesContainer,
      @NonNull RelativeLayout mainContainer, @NonNull LinearLayout overviewContainer,
      @NonNull TextView status, @NonNull TextView temp, @NonNull TextView tempMax,
      @NonNull TextView tempMin, @NonNull TextView updatedAt) {
    this.rootView = rootView;
    this.Button1 = Button1;
    this.Button2 = Button2;
    this.address = address;
    this.addressContainer = addressContainer;
    this.detailsContainer = detailsContainer;
    this.imagesContainer = imagesContainer;
    this.mainContainer = mainContainer;
    this.overviewContainer = overviewContainer;
    this.status = status;
    this.temp = temp;
    this.tempMax = tempMax;
    this.tempMin = tempMin;
    this.updatedAt = updatedAt;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Button1;
      Button Button1 = rootView.findViewById(id);
      if (Button1 == null) {
        break missingId;
      }

      id = R.id.Button2;
      Button Button2 = rootView.findViewById(id);
      if (Button2 == null) {
        break missingId;
      }

      id = R.id.address;
      TextView address = rootView.findViewById(id);
      if (address == null) {
        break missingId;
      }

      id = R.id.addressContainer;
      LinearLayout addressContainer = rootView.findViewById(id);
      if (addressContainer == null) {
        break missingId;
      }

      id = R.id.detailsContainer;
      LinearLayout detailsContainer = rootView.findViewById(id);
      if (detailsContainer == null) {
        break missingId;
      }

      id = R.id.imagesContainer;
      LinearLayout imagesContainer = rootView.findViewById(id);
      if (imagesContainer == null) {
        break missingId;
      }

      id = R.id.mainContainer;
      RelativeLayout mainContainer = rootView.findViewById(id);
      if (mainContainer == null) {
        break missingId;
      }

      id = R.id.overviewContainer;
      LinearLayout overviewContainer = rootView.findViewById(id);
      if (overviewContainer == null) {
        break missingId;
      }

      id = R.id.status;
      TextView status = rootView.findViewById(id);
      if (status == null) {
        break missingId;
      }

      id = R.id.temp;
      TextView temp = rootView.findViewById(id);
      if (temp == null) {
        break missingId;
      }

      id = R.id.temp_max;
      TextView tempMax = rootView.findViewById(id);
      if (tempMax == null) {
        break missingId;
      }

      id = R.id.temp_min;
      TextView tempMin = rootView.findViewById(id);
      if (tempMin == null) {
        break missingId;
      }

      id = R.id.updated_at;
      TextView updatedAt = rootView.findViewById(id);
      if (updatedAt == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, Button1, Button2, address,
          addressContainer, detailsContainer, imagesContainer, mainContainer, overviewContainer,
          status, temp, tempMax, tempMin, updatedAt);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
